package com.tamal.leetcode.algo;

import java.math.BigDecimal;

public class MedianOfTwoSortedArrays {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
		int num1L = nums1.length;
		int num2L = nums2.length;
		
		int reqIndex1 = (num1L+num2L)/2;
		int reqIndex2 = (num1L+num2L)%2 == 0 ? (num1L+num2L)/2 : (num1L+num2L)/2 + 1;
		
		

	}
	
	public static double findMedian(int[] nums1, int[] nums2, int s1, int l1, int s2, int l2) {
		int d = (s1+l1)/2;
		if(nums1.length == 0) {
			if((s2+l2)%2 == 0) {
				BigDecimal mid1 = new BigDecimal(nums2[(s2+l2)%2]);
				BigDecimal mid2 = new BigDecimal(nums2[(s2+l2)%2+1]);
				return (mid1.add(mid2)).divide(new BigDecimal(2)).setScale(5).doubleValue();
			} else {
				return new BigDecimal(nums2[(s2+l2)/2]).setScale(5).doubleValue();
			}
		} else if(nums2.length == 0) {
			if((s2+l2)%2 == 0) {
				BigDecimal mid1 = new BigDecimal(nums1[(s1+l1)%2]);
				BigDecimal mid2 = new BigDecimal(nums1[(s1+l1)%2+1]);
				return (mid1.add(mid2)).divide(new BigDecimal(2)).setScale(5).doubleValue();
			} else {
				return new BigDecimal(nums1[(s1+l1)/2]).setScale(5).doubleValue();
			}
		}
		
		for(int i : nums2) {
			if(i <= nums1[(s1+l1)/2]) {
				findMedian(nums1, nums2, s1, l1/2, s2, l2);
			} else {
				findMedian(nums1, nums2, s1/2, l1, s2, l2);
			}
		}
		
	}

}
